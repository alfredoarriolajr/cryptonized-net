//Next JS imports
import Head from 'next/head';
import { v4 as uuid } from 'uuid';

//React import
import { useState, useEffect } from 'react';

//Near imports
import {
    signIn,
    signOut,
    wallet,
    viewFunction,
    callFunction,
} from '../near/cryptonized';
import { useSupabaseClient } from '@supabase/auth-helpers-react';

export default function NFT() {
    const [user, setUser] = useState(null);
    // const [metadata, setMetadata] = useState(null);
    const [newNft, setNewNft] = useState(null);
    const [newTitle, setNewTitle] = useState(null);
    const [newDescription, setNewDescription] = useState(null);
    const [newMedia, setNewMedia] = useState('');
    const id = uuid().slice(0, 16).replace(/-/g, '');
    const supabase = useSupabaseClient();
    console.log('supabase', supabase);

    useEffect(() => {
        if (wallet.getAccountId()) {
            setUser(wallet.getAccountId());
            viewFunction('nft_tokens_for_owner', { account_id: user }).then(
                (result) => {
                    setNewNft(result);
                    console.log('result', result);
                }
            );
            console.log('user', user);
            getStripeSubscription();
        }
    }, [user]);

    const getStripeSubscription = async () => {
        const { data } = supabase.storage
        .from('cryptonized')
        .getPublicUrl(
            'folder/avatar1.png'
        );
    setNewMedia(data.publicURL);
    console.log('data', data);
    };

    const uploadFile = async () => {
        const { data, error } = await supabase.storage.getBucket('cryptonized');
    };

    const createNFT = async () => {
        await callFunction(
            'nft_mint',
            {
                token_id: id,
                metadata: {
                    title: newTitle,
                    description: newDescription,
                    media: newMedia,
                    // media: 'https://media.licdn.com/dms/image/C560BAQGnbrbibTKR6Q/company-logo_200_200/0/1672737295471?e=1680739200&v=beta&t=dhlWalKcErYK8iwwIWGmIr4C1U2SIDT43OCGDMzIn7w',
                },
                receiver_id: user,
            },
            '1', // attached GAS (optional)
            '7730000000000000000000' // attached GAS (optional)
        );
    };

    function handleChange(event) {
        setNewMedia(event.target.files[0]);
    }

    return (
        <div>
            <Head>
                <title>Cryptonized</title>
                <meta
                    name='description'
                    content='Generated by create next app'
                />
                <link rel='icon' href='/favicon.ico' />
            </Head>

            <div className='mt-6 border-t-4'>
                {!user ? (
                    <>
                        <h4>
                            Welcome to Cryptonized please connect your near
                            wallet
                        </h4>
                        <button
                            className='bg-blue-400 hover:bg-blue-500 text-white font-bold py-2 px-4 rounded'
                            onClick={() => {
                                signIn();
                            }}>
                            Sign In
                        </button>
                    </>
                ) : (
                    <>
                        <div className='mt-6'>
                            <div>
                                <h1>Javascript Contract</h1>
                                <form className='flex flex-col'>
                                    <label htmlFor='title'>Title</label>
                                    <input
                                        type='text'
                                        name='title'
                                        id='title'
                                        placeholder='Title'
                                        onChange={(e) =>
                                            setNewTitle(e.target.value)
                                        }
                                    />
                                    <label htmlFor='description'>
                                        Description
                                    </label>
                                    <input
                                        type='text'
                                        name='description'
                                        id='description'
                                        placeholder='Description'
                                        onChange={(e) =>
                                            setNewDescription(e.target.value)
                                        }
                                    />
                                    {/* <input
                                        type='file'
                                        onChange={async () => {
                                            const { data } = supabase.storage
                                                .from('cryptonized')
                                                .getPublicUrl(
                                                    'folder/avatar1.png'
                                                );
                                            setNewMedia(data.publicURL);
                                            console.log('data', data);
                                        }}
                                    /> */}
                                </form>
                                <button onClick={createNFT}>Create NFT</button>
                            </div>
                            {newNft && (
                                <div>
                                    <h1 className='text-2xl'>Your NFTs</h1>
                                    <div className='flex flex-wrap'>
                                        {newNft.map((token) => (
                                            <div
                                                key={token.token_id}
                                                className='w-1/4 p-2'>
                                                <img
                                                    src={token.metadata.media}
                                                    alt={token.metadata.title}
                                                />
                                                <p>{token.metadata.title}</p>

                                                <p>
                                                    {token.metadata.description}
                                                </p>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}
                        </div>
                    </>
                )}
            </div>
        </div>
    );
}
